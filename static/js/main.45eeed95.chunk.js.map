{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/tableColumns.js","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.styled.js","components/App/App.jsx","index.js","theme/index.js"],"names":["StyledSection","Title","Section","title","children","FeedbackOptions","options","onLeaveFeedback","gutter","map","btn","className","span","name","block","onClick","columns","dataIndex","key","Statistics","props","data","dataSource","pagination","bordered","Notification","text","Container","App","state","good","neutral","bad","handleIncrementFeedback","e","target","closest","setState","prevState","getTotalFeedback","Object","values","reduce","a","b","getPositivePercentage","total","Math","round","this","isFeedbacks","keys","positivePercentage","Component","ReactDOM","render","StrictMode","theme","colors","black","document","getElementById"],"mappings":"6RAEO,IAAMA,EAAa,qFAIbC,EAAK,oH,QCFH,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACJ,EAAD,WACGG,GAAS,cAACF,EAAD,UAAQE,IACjBC,K,8BCHQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,cAAC,IAAD,CAAwBC,UAAU,aAAaC,KAAM,EAArD,SACE,cAAC,IAAD,CAAQC,KAAMH,EAAKI,OAAK,EAACC,QAASR,EAAlC,SACGG,KAFL,UAAaA,EAAb,c,sBCTKM,EAAU,CACrB,CACEb,MAAO,OACPc,UAAW,OACXC,IAAK,QAEP,CACEf,MAAO,UACPc,UAAW,UACXC,IAAK,WAEP,CACEf,MAAO,MACPc,UAAW,MACXC,IAAK,OAEP,CACEf,MAAO,QACPc,UAAW,QACXC,IAAK,SAEP,CACEf,MAAO,oBACPc,UAAW,qBACXC,IAAK,uBCjBM,SAASC,EAAWC,GACjC,IAAMC,EAAO,CAAC,aAEVH,IAAK,KACFE,IAIP,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKR,KAAM,EAAX,SACE,cAAC,IAAD,CACEI,QAASA,EACTM,WAAYD,EACZE,YAAY,EACZC,UAAQ,QCtBH,SAASC,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACrC,OAAO,4BAAIA,ICCN,IAAMC,EAAS,gHCODC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,wBAA0B,SAAAC,GACxB,IAAMrB,EAAOqB,EAAEC,OAAOC,QAAQ,UAAUvB,KAExC,EAAKwB,UAAS,SAAAC,GAAS,sBACpBzB,EAAOyB,EAAUzB,GAAQ,O,EAI9B0B,iBAAmB,WACjB,OAAOC,OAAOC,OAAO,EAAKZ,OAAOa,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAGxDC,sBAAwB,WACtB,IAAMC,EAAQ,EAAKP,mBACXT,EAAS,EAAKD,MAAdC,KAER,OAAiB,IAAVgB,EAAA,UAAiBC,KAAKC,MAAOlB,EAAOgB,EAAS,KAA7C,W,4CAGT,WACE,MAA+BG,KAAKpB,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBkB,EAAcD,KAAKV,mBAAqB,EAE9C,OACE,eAACZ,EAAD,WACE,cAACzB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAASkC,OAAOW,KAAKF,KAAKpB,OAC1BtB,gBAAiB0C,KAAKhB,4BAI1B,cAAC/B,EAAD,CAASC,MAAM,aAAf,SACG+C,EACC,cAAC/B,EAAD,CACEW,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLc,MAAOG,KAAKV,mBACZa,mBAAoBH,KAAKJ,0BAG3B,cAACpB,EAAD,CAAcC,KAAK,+B,GAjDE2B,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MCVJ,CACbC,OAAQ,CACNC,MAAO,YDQP,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.45eeed95.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const StyledSection = styled.section`\n  padding: 24px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 24px;\n  font-size: 36px;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledSection, Title } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <StyledSection>\n      {title && <Title>{title}</Title>}\n      {children}\n    </StyledSection>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { Row, Col } from 'antd';\nimport { Button } from 'antd';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <Row gutter={16}>\n      {options.map(btn => (\n        <Col key={`${btn}-btn`} className=\"gutter-row\" span={3}>\n          <Button name={btn} block onClick={onLeaveFeedback}>\n            {btn}\n          </Button>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n","export const columns = [\n  {\n    title: 'Good',\n    dataIndex: 'good',\n    key: 'good',\n  },\n  {\n    title: 'Neutral',\n    dataIndex: 'neutral',\n    key: 'neutral',\n  },\n  {\n    title: 'Bad',\n    dataIndex: 'bad',\n    key: 'bad',\n  },\n  {\n    title: 'Total',\n    dataIndex: 'total',\n    key: 'total',\n  },\n  {\n    title: 'Positive feedback',\n    dataIndex: 'positivePercentage',\n    key: 'positivePercentage',\n  },\n];\n","import PropTypes from 'prop-types';\n\nimport { Table } from 'antd';\nimport { Row, Col } from 'antd';\n\nimport { columns } from './tableColumns';\n\nexport default function Statistics(props) {\n  const data = [\n    {\n      key: '1',\n      ...props,\n    },\n  ];\n\n  return (\n    <Row>\n      <Col span={6}>\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={false}\n          bordered\n        />\n      </Col>\n    </Row>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","export default function Notification({ text }) {\n  return <p>{text}</p>;\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  max-width: 1140px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n","import React, { Component } from 'react';\n\nimport Section from 'components/Section';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\nimport Notification from 'components/Notification';\n\nimport { Container } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrementFeedback = e => {\n    const name = e.target.closest('button').name;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  getTotalFeedback = () => {\n    return Object.values(this.state).reduce((a, b) => a + b);\n  };\n\n  getPositivePercentage = () => {\n    const total = this.getTotalFeedback();\n    const { good } = this.state;\n\n    return total !== 0 ? `${Math.round((good / total) * 100)}%` : `0%`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const isFeedbacks = this.getTotalFeedback() > 0;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrementFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {isFeedbacks ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.getTotalFeedback()}\n              positivePercentage={this.getPositivePercentage()}\n            />\n          ) : (\n            <Notification text=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\n\nimport theme from './theme';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  colors: {\n    black: '#000000',\n  },\n};\n"],"sourceRoot":""}